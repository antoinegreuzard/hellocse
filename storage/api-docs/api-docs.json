{
    "openapi": "3.0.0",
    "info": {
        "title": "My API",
        "description": "API for managing stars",
        "contact": {
            "email": "antoine@antoinegreuzard.fr"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000",
            "description": "API Server"
        }
    ],
    "paths": {
        "/api/stars": {
            "get": {
                "tags": [
                    "Stars"
                ],
                "summary": "Get list of all stars",
                "description": "Display a listing of the resource.",
                "operationId": "625b084fd10a832b7ff9d6b3d870edbd",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Star"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Stars"
                ],
                "summary": "Create a new star",
                "operationId": "f664dfe4bde8087c0f9afcf7c8a77957",
                "requestBody": {
                    "description": "Pass star data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "first_name"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of the Star",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Sirius"
                                    },
                                    "first_name": {
                                        "description": "First name of the Star",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Alpha"
                                    },
                                    "image": {
                                        "description": "URL of the Star's image",
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://example.com/images/star.jpg"
                                    },
                                    "description": {
                                        "description": "Brief description of the Star",
                                        "type": "string",
                                        "example": "A bright star in the night sky."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Star created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Star"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/stars/{id}": {
            "get": {
                "tags": [
                    "Stars"
                ],
                "summary": "Get a single star by ID",
                "description": "Display the specified Star.",
                "operationId": "de76f82e09b1051c1bc06b8b2d47728b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the star",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Star"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Star not found"
                    }
                }
            }
        },
        "/api/stars/{star}": {
            "put": {
                "tags": [
                    "Stars"
                ],
                "summary": "Update an existing star",
                "description": "Update a 'star' by its ID",
                "operationId": "updateStar",
                "parameters": [
                    {
                        "name": "star",
                        "in": "path",
                        "description": "ID of the star to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Star data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Star"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Star updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Star"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Stars"
                ],
                "summary": "Delete a star",
                "operationId": "b001724f7b5506a9fc139a44ae7e663e",
                "parameters": [
                    {
                        "name": "star",
                        "in": "path",
                        "description": "ID of the star to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Star deleted"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/login": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Display the login view",
                "description": "Display the login view.",
                "operationId": "d38b0625602ec8e41c3bb98aa2e969de",
                "responses": {
                    "200": {
                        "description": "Login view rendered"
                    }
                }
            },
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Handle login request",
                "description": "Handle an incoming authentication request.",
                "operationId": "42f77e072dec84b0e1094cca1228298e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "302": {
                        "description": "Login successful"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout user",
                "description": "Destroy an authenticated session.",
                "operationId": "03afb12b342c2ea43bdc1de4f39e91a8",
                "responses": {
                    "302": {
                        "description": "Logout successful"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/register": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Display the registration view",
                "description": "Display the registration view.",
                "operationId": "711394cf638654593b284d884e4c5be4",
                "responses": {
                    "200": {
                        "description": "Registration view rendered"
                    }
                }
            },
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Handle registration request",
                "description": "Handle an incoming registration request.",
                "operationId": "573de1fed352c1205a32c4d1b9877375",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Registration successful"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Star": {
                "required": [
                    "name",
                    "first_name"
                ],
                "properties": {
                    "id": {
                        "description": "Unique identifier for the Star",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "description": "Name of the Star",
                        "type": "string"
                    },
                    "first_name": {
                        "description": "First name of the Star",
                        "type": "string"
                    },
                    "image": {
                        "description": "URL of the Star's image",
                        "type": "string",
                        "format": "uri"
                    },
                    "description": {
                        "description": "Description of the Star",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "User": {
                "required": [
                    "name",
                    "email",
                    "password"
                ],
                "properties": {
                    "id": {
                        "description": "User ID",
                        "type": "integer"
                    },
                    "name": {
                        "description": "User's name",
                        "type": "string"
                    },
                    "email": {
                        "description": "User's email address",
                        "type": "string"
                    },
                    "password": {
                        "description": "User's password",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Timestamp of user creation",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp of last update",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "security": [
        {
            "sanctum": []
        }
    ]
}